//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./gigapaxos/src/edu/umass/cs/utils/GCConcurrentHashMap.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduUmassCsUtilsGCConcurrentHashMap")
#ifdef RESTRICT_EduUmassCsUtilsGCConcurrentHashMap
#define INCLUDE_ALL_EduUmassCsUtilsGCConcurrentHashMap 0
#else
#define INCLUDE_ALL_EduUmassCsUtilsGCConcurrentHashMap 1
#endif
#undef RESTRICT_EduUmassCsUtilsGCConcurrentHashMap

#if !defined (EduUmassCsUtilsGCConcurrentHashMap_) && (INCLUDE_ALL_EduUmassCsUtilsGCConcurrentHashMap || defined(INCLUDE_EduUmassCsUtilsGCConcurrentHashMap))
#define EduUmassCsUtilsGCConcurrentHashMap_

#define RESTRICT_JavaUtilConcurrentConcurrentHashMap 1
#define INCLUDE_JavaUtilConcurrentConcurrentHashMap 1
#include "java/util/concurrent/ConcurrentHashMap.h"

@class IOSObjectArray;
@protocol EduUmassCsUtilsGCConcurrentHashMapCallback;
@protocol JavaUtilMap;

@interface EduUmassCsUtilsGCConcurrentHashMap : JavaUtilConcurrentConcurrentHashMap

#pragma mark Public

- (instancetype)initWithEduUmassCsUtilsGCConcurrentHashMapCallback:(id<EduUmassCsUtilsGCConcurrentHashMapCallback>)callback
                                                          withLong:(jlong)gcTimeout;

- (instancetype)initWithLong:(jlong)gcTimeout;

+ (void)mainWithNSStringArray:(IOSObjectArray *)args;

- (id)putWithId:(id)key
         withId:(id)value;

- (void)putAllWithJavaUtilMap:(id<JavaUtilMap>)map;

- (id)putIfAbsentWithId:(id)key
                 withId:(id)value;

- (id)removeWithId:(id)key;

- (jboolean)removeWithId:(id)key
                  withId:(id)value;

- (EduUmassCsUtilsGCConcurrentHashMap *)setGCThresholdSizeWithInt:(jint)size;

- (EduUmassCsUtilsGCConcurrentHashMap *)setGCTimeoutWithLong:(jlong)timeout;

- (void)tryGCWithLong:(jlong)timeout;

@end

J2OBJC_EMPTY_STATIC_INIT(EduUmassCsUtilsGCConcurrentHashMap)

FOUNDATION_EXPORT void EduUmassCsUtilsGCConcurrentHashMap_initWithEduUmassCsUtilsGCConcurrentHashMapCallback_withLong_(EduUmassCsUtilsGCConcurrentHashMap *self, id<EduUmassCsUtilsGCConcurrentHashMapCallback> callback, jlong gcTimeout);

FOUNDATION_EXPORT EduUmassCsUtilsGCConcurrentHashMap *new_EduUmassCsUtilsGCConcurrentHashMap_initWithEduUmassCsUtilsGCConcurrentHashMapCallback_withLong_(id<EduUmassCsUtilsGCConcurrentHashMapCallback> callback, jlong gcTimeout) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduUmassCsUtilsGCConcurrentHashMap *create_EduUmassCsUtilsGCConcurrentHashMap_initWithEduUmassCsUtilsGCConcurrentHashMapCallback_withLong_(id<EduUmassCsUtilsGCConcurrentHashMapCallback> callback, jlong gcTimeout);

FOUNDATION_EXPORT void EduUmassCsUtilsGCConcurrentHashMap_initWithLong_(EduUmassCsUtilsGCConcurrentHashMap *self, jlong gcTimeout);

FOUNDATION_EXPORT EduUmassCsUtilsGCConcurrentHashMap *new_EduUmassCsUtilsGCConcurrentHashMap_initWithLong_(jlong gcTimeout) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduUmassCsUtilsGCConcurrentHashMap *create_EduUmassCsUtilsGCConcurrentHashMap_initWithLong_(jlong gcTimeout);

FOUNDATION_EXPORT void EduUmassCsUtilsGCConcurrentHashMap_mainWithNSStringArray_(IOSObjectArray *args);

J2OBJC_TYPE_LITERAL_HEADER(EduUmassCsUtilsGCConcurrentHashMap)

#endif

#if !defined (EduUmassCsUtilsGCConcurrentHashMap_GCConcurrentHashMapTest_) && (INCLUDE_ALL_EduUmassCsUtilsGCConcurrentHashMap || defined(INCLUDE_EduUmassCsUtilsGCConcurrentHashMap_GCConcurrentHashMapTest))
#define EduUmassCsUtilsGCConcurrentHashMap_GCConcurrentHashMapTest_

#define RESTRICT_EduUmassCsUtilsDefaultTest 1
#define INCLUDE_EduUmassCsUtilsDefaultTest 1
#include "edu/umass/cs/utils/DefaultTest.h"

@interface EduUmassCsUtilsGCConcurrentHashMap_GCConcurrentHashMapTest : EduUmassCsUtilsDefaultTest

#pragma mark Public

- (instancetype)init;

- (void)testMain;

@end

J2OBJC_EMPTY_STATIC_INIT(EduUmassCsUtilsGCConcurrentHashMap_GCConcurrentHashMapTest)

FOUNDATION_EXPORT void EduUmassCsUtilsGCConcurrentHashMap_GCConcurrentHashMapTest_init(EduUmassCsUtilsGCConcurrentHashMap_GCConcurrentHashMapTest *self);

FOUNDATION_EXPORT EduUmassCsUtilsGCConcurrentHashMap_GCConcurrentHashMapTest *new_EduUmassCsUtilsGCConcurrentHashMap_GCConcurrentHashMapTest_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduUmassCsUtilsGCConcurrentHashMap_GCConcurrentHashMapTest *create_EduUmassCsUtilsGCConcurrentHashMap_GCConcurrentHashMapTest_init();

J2OBJC_TYPE_LITERAL_HEADER(EduUmassCsUtilsGCConcurrentHashMap_GCConcurrentHashMapTest)

#endif

#pragma pop_macro("INCLUDE_ALL_EduUmassCsUtilsGCConcurrentHashMap")
